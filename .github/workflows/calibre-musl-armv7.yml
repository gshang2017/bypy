name: calibre-musl-armv7-build

on:
  push:
    branches:
      - alpine-musl
      - '!bypy/virtual_machine/**'
      - '!bypy/README.rst'
      - '!bypy/session.vim'
      - '!qt.build.cross/**'
      - '!.github/workflows/calibre-musl-aarch64.yml'
      - '!.github/workflows/calibre-musl-amd64.yml'
  workflow_dispatch:

env:
  CALIBRE_VER: 5.2.0

jobs:
  job1:
    name: build_1
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: download src
        run: |
          sudo apt-get update
          sudo apt-get install  python3.8 qemu-user-static
          cd /home/runner/work/bypy/
          wget  https://download.calibre-ebook.com/${{ env.CALIBRE_VER}}/calibre-${{ env.CALIBRE_VER}}.tar.xz
          tar -xJf calibre-${{ env.CALIBRE_VER}}.tar.xz
          mv calibre-${{ env.CALIBRE_VER}} calibre
          cp -rf bypy/calibre.patch/*  calibre
          mv calibre/bypy/armv7.conf calibre/bypy/linux.conf

      - name: calibre-musl-build_1
        run: |
          h1=$((`grep -wn "f8a34cf52d9f9b9cb8c7f26b12da347d4af7eb904c13189602e4c6b62d1a79dc" /home/runner/work/bypy/calibre/bypy/sources.json |awk -F: '{print $1}'`+3))
          h3=$((`grep -n "" /home/runner/work/bypy/calibre/bypy/sources.json|awk -F: '{print $1}'|tail -n1`-2))
          sed -i "${h1},${h3}d" /home/runner/work/bypy/calibre/bypy/sources.json
          cd /home/runner/work/bypy/calibre
          sudo python3.8 setup.py build_dep linux 32

      - name: 'build_1_pkg.tar.gz'
        run: |
          tar -czPf /home/runner/work/bypy/pkg.tar.gz /home/runner/work/bypy/calibre/bypy/b/linux/32/sw/pkg

      - name: Upload build calibre-musl-build_1 result for job 1
        uses: actions/upload-artifact@v2
        with:
         name: pkg
         path: /home/runner/work/bypy/pkg.tar.gz


      - name: 'build_1_img.tar.gz'
        run: |
          tar -czPf /home/runner/work/bypy/img.tar.gz   /home/runner/work/bypy/calibre/bypy/b/linux/32/chroot.img

      - name: Upload build calibre-musl-build_1 result for job 1
        uses: actions/upload-artifact@v2
        with:
         name: img
         path: /home/runner/work/bypy/img.tar.gz

  job2:
    needs: job1
    name: build_2
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: download src
        run: |
          sudo apt-get update
          sudo apt-get install  python3.8 qemu-user-static
          cd /home/runner/work/bypy/
          wget  https://download.calibre-ebook.com/${{ env.CALIBRE_VER}}/calibre-${{ env.CALIBRE_VER}}.tar.xz
          tar -xJf calibre-${{ env.CALIBRE_VER}}.tar.xz
          mv calibre-${{ env.CALIBRE_VER}} calibre
          cp -rf bypy/calibre.patch/*  calibre
          mv calibre/bypy/armv7.conf calibre/bypy/linux.conf


      - name: download build calibre-musl-build_1 result for job 1
        uses: actions/download-artifact@v2
        with:
         name: img
         path: /home/runner/work/bypy

      - name: download build calibre-musl-build_1 result for job 1
        uses: actions/download-artifact@v2
        with:
          name: pkg
          path: /home/runner/work/bypy

      - name: calibre-musl-build_2
        run: |
          tar -xzPf  /home/runner/work/bypy/img.tar.gz
          tar -xzPf  /home/runner/work/bypy/pkg.tar.gz
          mkdir -p /home/runner/work/bypy/calibre/bypy/b/linux/32/chroot
          sed -i  s/"files\/2573619\/{filename}"/"archive\/v1.6.2.tar.gz"/g  /home/runner/work/bypy/calibre/bypy/sources.json
          sed -i  s/"hunspell-1.7.0.tar.gz"/"hunspell-1.6.0.tar.gz"/g  /home/runner/work/bypy/calibre/bypy/sources.json
          sed -i  s/"57be4e03ae9dd62c3471f667a0d81a14513e314d4d92081292b90435944ff951"/"3cd9ceb062fe5814f668e4f22b2fa6e3ba0b339b921739541ce180cac4d6f4c4"/g  /home/runner/work/bypy/calibre/bypy/sources.json
          h1=$((`grep -wn "qt-base" /home/runner/work/bypy/calibre/bypy/sources.json |awk -F: '{print $1}'`+5))
          h3=$((`grep -n "" /home/runner/work/bypy/calibre/bypy/sources.json|awk -F: '{print $1}'|tail -n1`-2))
          sed -i "${h1},${h3}d" /home/runner/work/bypy/calibre/bypy/sources.json
          cd /home/runner/work/bypy/calibre
          sudo python3.8 setup.py build_dep linux 32

      - name: 'build_2_pkg.tar.gz'
        run: |
          tar -czPf /home/runner/work/bypy/pkg.tar.gz /home/runner/work/bypy/calibre/bypy/b/linux/32/sw/pkg

      - name: Upload build calibre-musl-build_2 result for job 2
        uses: actions/upload-artifact@v2
        with:
         name: pkg
         path: /home/runner/work/bypy/pkg.tar.gz

      - name: 'build_2_crossimg.tar.gz'
        run: |
          sudo mv /home/runner/work/bypy/calibre/bypy/b/linux/32/chroot.img /home/runner/work/bypy/calibre/bypy/b/linux/32/chrootcross.img
          tar -czPf /home/runner/work/bypy/crossimg.tar.gz   /home/runner/work/bypy/calibre/bypy/b/linux/32/chrootcross.img

      - name: Upload build calibre-musl-build_2 result for job 2
        uses: actions/upload-artifact@v2
        with:
         name: crossimg
         path: /home/runner/work/bypy/crossimg.tar.gz

  job3:
    needs: job2
    name: build_3
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: download src
        run: |
          sudo apt-get update
          sudo apt-get install  python3.8 qemu-user-static
          cd /home/runner/work/bypy/
          wget  https://download.calibre-ebook.com/${{ env.CALIBRE_VER}}/calibre-${{ env.CALIBRE_VER}}.tar.xz
          tar -xJf calibre-${{ env.CALIBRE_VER}}.tar.xz
          mv calibre-${{ env.CALIBRE_VER}} calibre
          cp -rf bypy/calibre.patch/*  calibre
          mv calibre/bypy/armv7.cross.conf calibre/bypy/linux.conf
          cp -rf bypy/qt.build.cross/armv7.pkg/*  bypy/bypy/pkgs/
          cp -rf bypy/qt.build.cross/*.py  bypy/bypy/
          sed -i  s/readonly=True/readonly=False/g  /home/runner/work/bypy/bypy/bypy/linux.py

      - name: download build calibre-musl-build_2 result for job 2
        uses: actions/download-artifact@v2
        with:
          name: pkg
          path: /home/runner/work/bypy

      - name: download build calibre-musl-build_2 result for job 2
        uses: actions/download-artifact@v2
        with:
         name: crossimg
         path: /home/runner/work/bypy

      - name: calibre-musl-build_3
        continue-on-error: true
        timeout-minutes: 330
        run: |
          tar -xzPf  /home/runner/work/bypy/crossimg.tar.gz
          tar -xzPf  /home/runner/work/bypy/pkg.tar.gz
          mv /home/runner/work/bypy/calibre/bypy/b/linux/32/sw/pkg/qt-base /home/runner/work/bypy/calibre/bypy/b/linux/32/sw/pkg/qt-base.bak
          mkdir -p /home/runner/work/bypy/calibre/bypy/b/linux/32/chroot
          h1=$((`grep -wn "qt-sensors" /home/runner/work/bypy/calibre/bypy/sources.json |awk -F: '{print $1}'`+4))
          h3=$((`grep -n "" /home/runner/work/bypy/calibre/bypy/sources.json|awk -F: '{print $1}'|tail -n1`-2))
          sed -i "${h1},${h3}d" /home/runner/work/bypy/calibre/bypy/sources.json
          cd /home/runner/work/bypy/calibre
          sudo python3.8 setup.py build_dep linux 32

      - name: 'build_3_pkg.tar.gz'
        run: |
          tar -czPf /home/runner/work/bypy/pkg.tar.gz /home/runner/work/bypy/calibre/bypy/b/linux/32/sw/pkg

      - name: Upload build calibre-musl-build_3 result for job3
        uses: actions/upload-artifact@v2
        with:
         name: pkg
         path: /home/runner/work/bypy/pkg.tar.gz

      - name: 'build_3_img.tar.gz'
        run: |
          tar -czPf /home/runner/work/bypy/img.tar.gz   /home/runner/work/bypy/calibre/bypy/b/linux/32/chroot.img

      - name: Upload build calibre-musl-build_3 result for job 3
        uses: actions/upload-artifact@v2
        with:
         name: img
         path: /home/runner/work/bypy/img.tar.gz

  job4:
    needs: job3
    name: build_4
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: download src
        run: |
          sudo apt-get update
          sudo apt-get install  python3.8 qemu-user-static
          cd /home/runner/work/bypy/
          wget  https://download.calibre-ebook.com/${{ env.CALIBRE_VER}}/calibre-${{ env.CALIBRE_VER}}.tar.xz
          tar -xJf calibre-${{ env.CALIBRE_VER}}.tar.xz
          mv calibre-${{ env.CALIBRE_VER}} calibre
          cp -rf bypy/calibre.patch/*  calibre
          mv calibre/bypy/armv7.cross.conf calibre/bypy/linux.conf
          cp -rf bypy/qt.build.cross/armv7.pkg/*  bypy/bypy/pkgs/
          cp -rf bypy/qt.build.cross/*.py  bypy/bypy/
          sed -i  s/readonly=True/readonly=False/g  /home/runner/work/bypy/bypy/bypy/linux.py

      - name: download build calibre-musl-build_3 result for job 3
        uses: actions/download-artifact@v2
        with:
         name: img
         path: /home/runner/work/bypy

      - name: download build calibre-musl-build_2 result for job 2
        uses: actions/download-artifact@v2
        with:
         name: crossimg
         path: /home/runner/work/bypy

      - name: download build calibre-musl-build_3 result for job 3
        uses: actions/download-artifact@v2
        with:
          name: pkg
          path: /home/runner/work/bypy

      - name: calibre-musl-build_4
        continue-on-error: true
        timeout-minutes: 330
        run: |
          tar -xzPf  /home/runner/work/bypy/img.tar.gz
          tar -xzPf  /home/runner/work/bypy/crossimg.tar.gz
          tar -xzPf  /home/runner/work/bypy/pkg.tar.gz
          mkdir -p /home/runner/work/bypy/calibre/bypy/b/linux/32/chroot
          h2=$((`grep -wn "qt-webengine" /home/runner/work/bypy/calibre/bypy/sources.json |awk -F: '{print $1}'`+4))
          h3=$((`grep -n "" /home/runner/work/bypy/calibre/bypy/sources.json|awk -F: '{print $1}'|tail -n1`-2))
          sed -i "${h2},${h3}d" /home/runner/work/bypy/calibre/bypy/sources.json
          h4=$((`grep -wn "qt_build" /home/runner/work/bypy/bypy/bypy/utils.py |awk -F: '{print $1}'`+1))
          h5=$((`grep -wn "qt_build" /home/runner/work/bypy/bypy/bypy/utils.py |awk -F: '{print $1}'`+2))
          sed -i "${h4},${h5}d" /home/runner/work/bypy/bypy/bypy/utils.py
          cd /home/runner/work/bypy/calibre
          sudo python3.8 setup.py build_dep linux 32

      - name: 'build_3_pkg.tar.gz'
        run: |
          tar -czPf /home/runner/work/bypy/pkg.tar.gz /home/runner/work/bypy/calibre/bypy/b/linux/32/sw/pkg

      - name: Upload build calibre-musl-build_3 result for job3
        uses: actions/upload-artifact@v2
        with:
         name: pkg
         path: /home/runner/work/bypy/pkg.tar.gz


      - name: 'build_4_qt-webengine.tar.gz'
        run: |
          sudo tar --warning=no-file-changed -czPf /home/runner/work/bypy/calibre/qt-webengine.tar.gz  /home/runner/work/bypy/calibre/qt-webengine-build

      - name: Upload build calibre-musl-build_4 result for job 4
        uses: actions/upload-artifact@v2
        with:
          name: qt-webengine
          path: /home/runner/work/bypy/calibre/qt-webengine.tar.gz



  job5:
    needs: job4
    name: build_5
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: download src
        run: |
          sudo apt-get update
          sudo apt-get install  python3.8 qemu-user-static
          cd /home/runner/work/bypy/
          wget  https://download.calibre-ebook.com/${{ env.CALIBRE_VER}}/calibre-${{ env.CALIBRE_VER}}.tar.xz
          tar -xJf calibre-${{ env.CALIBRE_VER}}.tar.xz
          mv calibre-${{ env.CALIBRE_VER}} calibre
          cp -rf bypy/calibre.patch/*  calibre
          mv calibre/bypy/armv7.cross.conf calibre/bypy/linux.conf
          cp -rf bypy/qt.build.cross/armv7.pkg/*  bypy/bypy/pkgs/
          cp -rf bypy/qt.build.cross/*.py  bypy/bypy/
          sed -i  s/readonly=True/readonly=False/g  /home/runner/work/bypy/bypy/bypy/linux.py

      - name: download build calibre-musl-build_3 result for job 3
        uses: actions/download-artifact@v2
        with:
         name: img
         path: /home/runner/work/bypy

      - name: download build calibre-musl-build_2 result for job 2
        uses: actions/download-artifact@v2
        with:
         name: crossimg
         path: /home/runner/work/bypy

      - name: download build calibre-musl-build_3 result for job 3
        uses: actions/download-artifact@v2
        with:
          name: pkg
          path: /home/runner/work/bypy

      - name: download build calibre-musl-build_4 result for job 4
        uses: actions/download-artifact@v2
        with:
          name: qt-webengine
          path: /home/runner/work/bypy/calibre

      - name: calibre-musl-build_5
        continue-on-error: true
        timeout-minutes: 300
        run: |
          tar -xzPf  /home/runner/work/bypy/img.tar.gz
          tar -xzPf  /home/runner/work/bypy/crossimg.tar.gz
          tar -xzPf  /home/runner/work/bypy/pkg.tar.gz
          tar -xzPf  /home/runner/work/bypy/calibre/qt-webengine.tar.gz
          sudo find /home/runner/work/bypy/calibre/qt-webengine-build/ -name "*.o" -size 0 -exec rm -rf {} \;
          sed -i s/"ldflags ="/"ldflags = -L\/usr\/lib "/  /home/runner/work/bypy/calibre/qt-webengine-build/build/src/core/release/v8_snapshot/obj/v8/gen-regexp-special-case.ninja
          sed -i s/"ldflags ="/"ldflags = -L\/usr\/lib "/  /home/runner/work/bypy/calibre/qt-webengine-build/build/src/core/release/host/obj/third_party/blink/renderer/platform/character_data_generator.ninja
          sed -i s/"ldflags ="/"ldflags = -L\/usr\/lib "/  /home/runner/work/bypy/calibre/qt-webengine-build/build/src/core/release/v8_snapshot/obj/v8/mksnapshot.ninja
          mkdir -p /home/runner/work/bypy/calibre/bypy/b/linux/32/chroot
          h2=$((`grep -wn "qt-webengine" /home/runner/work/bypy/calibre/bypy/sources.json |awk -F: '{print $1}'`+4))
          h3=$((`grep -n "" /home/runner/work/bypy/calibre/bypy/sources.json|awk -F: '{print $1}'|tail -n1`-2))
          sed -i "${h2},${h3}d" /home/runner/work/bypy/calibre/bypy/sources.json
          h4=$((`grep -wn "qt_build" /home/runner/work/bypy/bypy/bypy/utils.py |awk -F: '{print $1}'`+1))
          h5=$((`grep -wn "qt_build" /home/runner/work/bypy/bypy/bypy/utils.py |awk -F: '{print $1}'`+2))
          sed -i "${h4},${h5}d" /home/runner/work/bypy/bypy/bypy/utils.py
          cd /home/runner/work/bypy/calibre
          sudo python3.8 setup.py build_dep linux 32

      - name: 'build_5_pkg.tar.gz'
        run: |
          tar -czPf /home/runner/work/bypy/pkg.tar.gz /home/runner/work/bypy/calibre/bypy/b/linux/32/sw/pkg

      - name: Upload build calibre-musl-build_5 result for job 5
        uses: actions/upload-artifact@v2
        with:
         name: pkg
         path: /home/runner/work/bypy/pkg.tar.gz


      - name: 'build_5_qt-webengine.tar.gz'
        run: |
          sudo tar --warning=no-file-changed -czPf /home/runner/work/bypy/calibre/qt-webengine.tar.gz  /home/runner/work/bypy/calibre/qt-webengine-build

      - name: Upload build calibre-musl-build_5 result for job 5
        uses: actions/upload-artifact@v2
        with:
          name: qt-webengine
          path: /home/runner/work/bypy/calibre/qt-webengine.tar.gz


  job6:
    needs: job5
    name: build_6
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: download src
        run: |
          sudo apt-get update
          sudo apt-get install  python3.8 qemu-user-static
          cd /home/runner/work/bypy/
          wget  https://download.calibre-ebook.com/${{ env.CALIBRE_VER}}/calibre-${{ env.CALIBRE_VER}}.tar.xz
          tar -xJf calibre-${{ env.CALIBRE_VER}}.tar.xz
          mv calibre-${{ env.CALIBRE_VER}} calibre
          cp -rf bypy/calibre.patch/*  calibre
          mv calibre/bypy/armv7.cross.conf calibre/bypy/linux.conf
          cp -rf bypy/qt.build.cross/armv7.pkg/*  bypy/bypy/pkgs/
          cp -rf bypy/qt.build.cross/*.py  bypy/bypy/
          sed -i  s/readonly=True/readonly=False/g  /home/runner/work/bypy/bypy/bypy/linux.py

      - name: download build calibre-musl-build_3 result for job 3
        uses: actions/download-artifact@v2
        with:
         name: img
         path: /home/runner/work/bypy

      - name: download build calibre-musl-build_2 result for job 2
        uses: actions/download-artifact@v2
        with:
         name: crossimg
         path: /home/runner/work/bypy

      - name: download build calibre-musl-build_5 result for job 5
        uses: actions/download-artifact@v2
        with:
          name: pkg
          path: /home/runner/work/bypy

      - name: download build calibre-musl-build_5 result for job 5
        uses: actions/download-artifact@v2
        with:
          name: qt-webengine
          path: /home/runner/work/bypy/calibre

      - name: calibre-musl-build_6
        continue-on-error: true
        timeout-minutes: 330
        run: |
          tar -xzPf  /home/runner/work/bypy/img.tar.gz
          tar -xzPf  /home/runner/work/bypy/crossimg.tar.gz
          tar -xzPf  /home/runner/work/bypy/pkg.tar.gz
          tar -xzPf  /home/runner/work/bypy/calibre/qt-webengine.tar.gz
          sudo find /home/runner/work/bypy/calibre/qt-webengine-build/ -name "*.o" -size 0 -exec rm -rf {} \;
          mkdir -p /home/runner/work/bypy/calibre/bypy/b/linux/32/chroot
          h2=$((`grep -wn "qt-webengine" /home/runner/work/bypy/calibre/bypy/sources.json |awk -F: '{print $1}'`+4))
          h3=$((`grep -n "" /home/runner/work/bypy/calibre/bypy/sources.json|awk -F: '{print $1}'|tail -n1`-2))
          sed -i "${h2},${h3}d" /home/runner/work/bypy/calibre/bypy/sources.json
          h4=$((`grep -wn "qt_build" /home/runner/work/bypy/bypy/bypy/utils.py |awk -F: '{print $1}'`+1))
          h5=$((`grep -wn "qt_build" /home/runner/work/bypy/bypy/bypy/utils.py |awk -F: '{print $1}'`+2))
          sed -i "${h4},${h5}d" /home/runner/work/bypy/bypy/bypy/utils.py
          cd /home/runner/work/bypy/calibre
          sudo python3.8 setup.py build_dep linux 32

      - name: 'build_6_pkg.tar.gz'
        run: |
          tar -czPf /home/runner/work/bypy/pkg.tar.gz /home/runner/work/bypy/calibre/bypy/b/linux/32/sw/pkg

      - name: Upload build calibre-musl-build_6 result for job 6
        uses: actions/upload-artifact@v2
        with:
         name: pkg
         path: /home/runner/work/bypy/pkg.tar.gz


      - name: 'build_6_qt-webengine.tar.gz'
        run: |
          sudo tar --warning=no-file-changed -czPf /home/runner/work/bypy/calibre/qt-webengine.tar.gz  /home/runner/work/bypy/calibre/qt-webengine-build

      - name: Upload build calibre-musl-build_6 result for job 6
        uses: actions/upload-artifact@v2
        with:
          name: qt-webengine
          path: /home/runner/work/bypy/calibre/qt-webengine.tar.gz

  job7:
    needs: job6
    name: build_7
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: download src
        run: |
          sudo apt-get update
          sudo apt-get install  python3.8 qemu-user-static
          cd /home/runner/work/bypy/
          wget  https://download.calibre-ebook.com/${{ env.CALIBRE_VER}}/calibre-${{ env.CALIBRE_VER}}.tar.xz
          tar -xJf calibre-${{ env.CALIBRE_VER}}.tar.xz
          mv calibre-${{ env.CALIBRE_VER}} calibre
          cp -rf bypy/calibre.patch/*  calibre
          mv calibre/bypy/armv7.conf calibre/bypy/linux.conf
          sed -i  s/readonly=True/readonly=False/g  /home/runner/work/bypy/bypy/bypy/linux.py

      - name: download build calibre-musl-build_3 result for job 3
        uses: actions/download-artifact@v2
        with:
         name: crossimg
         path: /home/runner/work/bypy

      - name: download build calibre-musl-build_6 result for job 6
        uses: actions/download-artifact@v2
        with:
          name: pkg
          path: /home/runner/work/bypy

      - name: calibre-musl-build_7
        continue-on-error: true
        timeout-minutes: 330
        run: |
          tar -xzPf  /home/runner/work/bypy/crossimg.tar.gz
          tar -xzPf  /home/runner/work/bypy/pkg.tar.gz
          sudo mv /home/runner/work/bypy/calibre/bypy/b/linux/32/chrootcross.img /home/runner/work/bypy/calibre/bypy/b/linux/32/chroot.img
          mv /home/runner/work/bypy/calibre/bypy/b/linux/32/sw/pkg/qt-base/qt/bin  /home/runner/work/bypy/calibre/bypy/b/linux/32/sw/pkg/qt-base/qt/bin.bak
          cp -rf /home/runner/work/bypy/calibre/bypy/b/linux/32/sw/pkg/qt-base.bak/qt/bin /home/runner/work/bypy/calibre/bypy/b/linux/32/sw/pkg/qt-base/qt/bin
          mkdir -p /home/runner/work/bypy/calibre/bypy/b/linux/32/chroot
          sed -i  s/"hunspell-1.7"/"hunspell-1.6"/g  /home/runner/work/bypy/calibre/setup/extensions.json
          sed -i  s/"hunspell-1.7"/"hunspell-1.6"/g  /home/runner/work/bypy/calibre/bypy/linux/__main__.py
          cd /home/runner/work/bypy/calibre
          sudo python3.8 setup.py build_dep linux 32

      - name: 'build_5_pkg.tar.gz'
        run: |
          tar -czPf /home/runner/work/bypy/pkg.tar.gz /home/runner/work/bypy/calibre/bypy/b/linux/32/sw/pkg

      - name: Upload build calibre-musl-build_5 result for job 5
        uses: actions/upload-artifact@v2
        with:
         name: pkg
         path: /home/runner/work/bypy/pkg.tar.gz


      - name: calibre-musl-build_finish
        run: |
          cd /home/runner/work/bypy/calibre
          sudo python3.8 setup.py linux32

      - name: 'build_calibre_dep.tar.gz'
        run: |
          tar -czPf /home/runner/work/bypy/calibre-${{ env.CALIBRE_VER}}-armv7_dep.tar.gz /home/runner/work/bypy/calibre/bypy/b/linux/32/sw/pkg

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          tag: v${{ env.CALIBRE_VER}}
          name: version ${{ env.CALIBRE_VER}}
          body: |
            alpine: calibre-version-${{ env.CALIBRE_VER}}
          draft: false
          prerelease: false
          artifacts: "/home/runner/work/bypy/calibre-${{ env.CALIBRE_VER}}-armv7_dep.tar.gz,/home/runner/work/bypy/calibre/dist/calibre-${{ env.CALIBRE_VER}}-armv7.musl.txz"

      - name: update tag
        id: update_tag
        uses: richardsimko/update-tag@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.CALIBRE_VER}}
          name: version ${{ env.CALIBRE_VER}}
