diff -up src/3rdparty/chromium/third_party/libjpeg_turbo/simd/arm/common/jidctfst-neon.c.arm-incompatible-ints src/3rdparty/chromium/third_party/libjpeg_turbo/simd/arm/common/jidctfst-neon.c
--- src/3rdparty/chromium/third_party/libjpeg_turbo/simd/arm/common/jidctfst-neon.c
+++ src/3rdparty/chromium/third_party/libjpeg_turbo/simd/arm/common/jidctfst-neon.c
@@ -84,8 +84,8 @@ void jsimd_idct_ifast_neon(void *dct_tab
   bitmap = vorrq_s16(bitmap, row6);
   bitmap = vorrq_s16(bitmap, row7);
 
-  int64_t left_ac_bitmap = vreinterpret_s64_s16(vget_low_s16(bitmap));
-  int64_t right_ac_bitmap = vreinterpret_s64_s16(vget_high_s16(bitmap));
+  int64_t left_ac_bitmap = vgetq_lane_s64(vreinterpretq_s64_s16(bitmap), 0);
+  int64_t right_ac_bitmap = vgetq_lane_s64(vreinterpretq_s64_s16(bitmap), 1);
 
   if (left_ac_bitmap == 0 && right_ac_bitmap == 0) {
     /* All AC coefficients are zero. */
@@ -405,13 +405,13 @@ void jsimd_idct_ifast_neon(void *dct_tab
                                      vqshrn_n_s16(col7, PASS1_BITS + 3));
   /* Clamp to range [0-255]. */
   uint8x16_t cols_01 = vreinterpretq_u8_s8(
-                            vaddq_s8(cols_01_s8, vdupq_n_u8(CENTERJSAMPLE)));
+                            vaddq_s8(cols_01_s8, (int8x16_t)vdupq_n_u8(CENTERJSAMPLE)));
   uint8x16_t cols_45 = vreinterpretq_u8_s8(
-                            vaddq_s8(cols_45_s8, vdupq_n_u8(CENTERJSAMPLE)));
+                            vaddq_s8(cols_45_s8, (int8x16_t)vdupq_n_u8(CENTERJSAMPLE)));
   uint8x16_t cols_23 = vreinterpretq_u8_s8(
-                            vaddq_s8(cols_23_s8, vdupq_n_u8(CENTERJSAMPLE)));
+                            vaddq_s8(cols_23_s8, (int8x16_t)vdupq_n_u8(CENTERJSAMPLE)));
   uint8x16_t cols_67 = vreinterpretq_u8_s8(
-                            vaddq_s8(cols_67_s8, vdupq_n_u8(CENTERJSAMPLE)));
+                            vaddq_s8(cols_67_s8, (int8x16_t)vdupq_n_u8(CENTERJSAMPLE)));
 
   /* Transpose block ready for store. */
   uint32x4x2_t cols_0415 = vzipq_u32(vreinterpretq_u32_u8(cols_01),
diff -up src/3rdparty/chromium/third_party/libjpeg_turbo/simd/arm/common/jidctint-neon.c.arm-incompatible-ints src/3rdparty/chromium/third_party/libjpeg_turbo/simd/arm/common/jidctint-neon.c
--- src/3rdparty/chromium/third_party/libjpeg_turbo/simd/arm/common/jidctint-neon.c
+++ src/3rdparty/chromium/third_party/libjpeg_turbo/simd/arm/common/jidctint-neon.c
@@ -214,13 +214,13 @@ void jsimd_idct_islow_neon(void *dct_tab
   int16x4_t bitmap = vorr_s16(row7, row6);
   bitmap = vorr_s16(bitmap, row5);
   bitmap = vorr_s16(bitmap, row4);
-  int64_t bitmap_rows_4567 = vreinterpret_s64_s16(bitmap);
+  int64_t bitmap_rows_4567 = (int64_t)vreinterpret_s64_s16(bitmap);
 
   if (bitmap_rows_4567 == 0) {
     bitmap = vorr_s16(bitmap, row3);
     bitmap = vorr_s16(bitmap, row2);
     bitmap = vorr_s16(bitmap, row1);
-    int64_t left_ac_bitmap = vreinterpret_s64_s16(bitmap);
+    int64_t left_ac_bitmap = (int64_t)vreinterpret_s64_s16(bitmap);
 
     if (left_ac_bitmap == 0) {
       int16x4_t dcval = vshl_n_s16(vmul_s16(row0, quant_row0), PASS1_BITS);
@@ -266,18 +266,18 @@ void jsimd_idct_islow_neon(void *dct_tab
   bitmap = vorr_s16(row7, row6);
   bitmap = vorr_s16(bitmap, row5);
   bitmap = vorr_s16(bitmap, row4);
-  bitmap_rows_4567 = vreinterpret_s64_s16(bitmap);
+  bitmap_rows_4567 = (int64_t)vreinterpret_s64_s16(bitmap);
   bitmap = vorr_s16(bitmap, row3);
   bitmap = vorr_s16(bitmap, row2);
   bitmap = vorr_s16(bitmap, row1);
-  int64_t right_ac_bitmap = vreinterpret_s64_s16(bitmap);
+  int64_t right_ac_bitmap = (int64_t)vreinterpret_s64_s16(bitmap);
 
   /* Initialise to non-zero value: defaults to regular second pass. */
   int64_t right_ac_dc_bitmap = 1;
 
   if (right_ac_bitmap == 0) {
     bitmap = vorr_s16(bitmap, row0);
-    right_ac_dc_bitmap = vreinterpret_s64_s16(bitmap);
+    right_ac_dc_bitmap = (int64_t)vreinterpret_s64_s16(bitmap);
 
     if (right_ac_dc_bitmap != 0) {
       int16x4_t dcval = vshl_n_s16(vmul_s16(row0, quant_row0), PASS1_BITS);
diff -up src/3rdparty/chromium/third_party/libjpeg_turbo/simd/arm/common/jidctred-neon.c.arm-incompatible-ints src/3rdparty/chromium/third_party/libjpeg_turbo/simd/arm/common/jidctred-neon.c
--- src/3rdparty/chromium/third_party/libjpeg_turbo/simd/arm/common/jidctred-neon.c
+++ src/3rdparty/chromium/third_party/libjpeg_turbo/simd/arm/common/jidctred-neon.c
@@ -217,8 +217,8 @@ void jsimd_idct_4x4_neon(void *dct_table
   bitmap = vorrq_s16(bitmap, row6);
   bitmap = vorrq_s16(bitmap, row7);
 
-  int64_t left_ac_bitmap = vreinterpret_s64_s16(vget_low_s16(bitmap));
-  int64_t right_ac_bitmap = vreinterpret_s64_s16(vget_high_s16(bitmap));
+  int64_t left_ac_bitmap = vgetq_lane_s64(vreinterpretq_s64_s16(bitmap), 0);
+  int64_t right_ac_bitmap = vgetq_lane_s64(vreinterpretq_s64_s16(bitmap), 1);
 
   /* Load constants for IDCT computation. */
 #if defined(__aarch64__) || defined(__ARM64__) || defined(_M_ARM64)
